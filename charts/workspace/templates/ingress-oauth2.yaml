{{- if eq .Values.ingress.auth.type "oauth2" }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ws-{{ .Values.user.name }}-oauth2
  namespace: {{ .Values.namespace }}
  labels:
    app: ws-{{ .Values.user.name }}
  annotations:
    {{- if .Values.ingress.className }}
    kubernetes.io/ingress.class: {{ .Values.ingress.className }}
    {{- end }}
    {{- if and .Values.ingress.tls.enabled .Values.ingress.tls.clusterIssuer }}
    cert-manager.io/cluster-issuer: {{ .Values.ingress.tls.clusterIssuer }}
    {{- end }}
    nginx.ingress.kubernetes.io/auth-url: "https://$host/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://$host/oauth2/start?rd=$escaped_request_uri"
    nginx.ingress.kubernetes.io/auth-response-headers: "x-auth-request-user,x-auth-request-email,x-auth-request-access-token"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-buffering: "off"
spec:
  {{- if .Values.ingress.tls.enabled }}
  tls:
  - hosts:
    - {{ .Values.user.host }}
    secretName: {{ .Values.ingress.tls.secretName }}
  {{- end }}
  rules:
  - host: {{ .Values.user.host }}
    http:
      paths:
      - path: /oauth
        pathType: Exact
        backend:
          service:
            name: ws-{{ .Values.user.name }}
            port:
              number: 6080
      - path: /oauth/
        pathType: Exact
        backend:
          service:
            name: ws-{{ .Values.user.name }}
            port:
              number: 6080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ws-{{ .Values.user.name }}-oauth2-browser
  namespace: {{ .Values.namespace }}
  labels:
    app: ws-{{ .Values.user.name }}
  annotations:
    {{- if .Values.ingress.className }}
    kubernetes.io/ingress.class: {{ .Values.ingress.className }}
    {{- end }}
    {{- if and .Values.ingress.tls.enabled .Values.ingress.tls.clusterIssuer }}
    cert-manager.io/cluster-issuer: {{ .Values.ingress.tls.clusterIssuer }}
    {{- end }}
    nginx.ingress.kubernetes.io/auth-url: "https://$host/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://$host/oauth2/start?rd=$escaped_request_uri"
    nginx.ingress.kubernetes.io/auth-response-headers: "x-auth-request-user,x-auth-request-email,x-auth-request-access-token"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
spec:
  {{- if .Values.ingress.tls.enabled }}
  tls:
  - hosts:
    - {{ .Values.user.host }}
    secretName: {{ .Values.ingress.tls.secretName }}
  {{- end }}
  rules:
  - host: {{ .Values.user.host }}
    http:
      paths:
      - path: /oauth/browser/(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: ws-{{ .Values.user.name }}
            port:
              number: 6080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ws-{{ .Values.user.name }}-oauth2-terminal
  namespace: {{ .Values.namespace }}
  labels:
    app: ws-{{ .Values.user.name }}
  annotations:
    {{- if .Values.ingress.className }}
    kubernetes.io/ingress.class: {{ .Values.ingress.className }}
    {{- end }}
    {{- if and .Values.ingress.tls.enabled .Values.ingress.tls.clusterIssuer }}
    cert-manager.io/cluster-issuer: {{ .Values.ingress.tls.clusterIssuer }}
    {{- end }}
    nginx.ingress.kubernetes.io/auth-url: "https://$host/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://$host/oauth2/start?rd=$escaped_request_uri"
    nginx.ingress.kubernetes.io/auth-response-headers: "x-auth-request-user,x-auth-request-email,x-auth-request-access-token"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-buffering: "off"
spec:
  {{- if .Values.ingress.tls.enabled }}
  tls:
  - hosts:
    - {{ .Values.user.host }}
    secretName: {{ .Values.ingress.tls.secretName }}
  {{- end }}
  rules:
  - host: {{ .Values.user.host }}
    http:
      paths:
      - path: /oauth/terminal
        pathType: Prefix
        backend:
          service:
            name: ws-{{ .Values.user.name }}
            port:
              number: 7681
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ws-{{ .Values.user.name }}-oauth2-vnc
  namespace: {{ .Values.namespace }}
  labels:
    app: ws-{{ .Values.user.name }}
  annotations:
    {{- if .Values.ingress.className }}
    kubernetes.io/ingress.class: {{ .Values.ingress.className }}
    {{- end }}
    {{- if and .Values.ingress.tls.enabled .Values.ingress.tls.clusterIssuer }}
    cert-manager.io/cluster-issuer: {{ .Values.ingress.tls.clusterIssuer }}
    {{- end }}
    nginx.ingress.kubernetes.io/auth-url: "https://$host/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://$host/oauth2/start?rd=$escaped_request_uri"
    nginx.ingress.kubernetes.io/auth-response-headers: "x-auth-request-user,x-auth-request-email,x-auth-request-access-token"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/proxy-set-headers: "ingress-nginx/websocket-headers"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/proxy-buffering: "off"
spec:
  {{- if .Values.ingress.tls.enabled }}
  tls:
  - hosts:
    - {{ .Values.user.host }}
    secretName: {{ .Values.ingress.tls.secretName }}
  {{- end }}
  rules:
  - host: {{ .Values.user.host }}
    http:
      paths:
      - path: /oauth/vnc-direct/(.*) 
        pathType: ImplementationSpecific
        backend:
          service:
            name: ws-{{ .Values.user.name }}
            port:
              number: 6081
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ws-{{ .Values.user.name }}-oauth2-websocket
  namespace: {{ .Values.namespace }}
  labels:
    app: ws-{{ .Values.user.name }}
  annotations:
    {{- if .Values.ingress.className }}
    kubernetes.io/ingress.class: {{ .Values.ingress.className }}
    {{- end }}
    {{- if and .Values.ingress.tls.enabled .Values.ingress.tls.clusterIssuer }}
    cert-manager.io/cluster-issuer: {{ .Values.ingress.tls.clusterIssuer }}
    {{- end }}
    nginx.ingress.kubernetes.io/auth-url: "https://$host/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://$host/oauth2/start?rd=$escaped_request_uri"
    nginx.ingress.kubernetes.io/auth-response-headers: "x-auth-request-user,x-auth-request-email,x-auth-request-access-token"
    nginx.ingress.kubernetes.io/proxy-set-headers: "ingress-nginx/websocket-headers"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/proxy-buffering: "off"
spec:
  {{- if .Values.ingress.tls.enabled }}
  tls:
  - hosts:
    - {{ .Values.user.host }}
    secretName: {{ .Values.ingress.tls.secretName }}
  {{- end }}
  rules:
  - host: {{ .Values.user.host }}
    http:
      paths:
      - path: /oauth/websockify
        pathType: Prefix
        backend:
          service:
            name: ws-{{ .Values.user.name }}
            port:
              number: 6081
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ws-{{ .Values.user.name }}-oauth2-ide
  namespace: {{ .Values.namespace }}
  labels:
    app: ws-{{ .Values.user.name }}
  annotations:
    {{- if .Values.ingress.className }}
    kubernetes.io/ingress.class: {{ .Values.ingress.className }}
    {{- end }}
    {{- if and .Values.ingress.tls.enabled .Values.ingress.tls.clusterIssuer }}
    cert-manager.io/cluster-issuer: {{ .Values.ingress.tls.clusterIssuer }}
    {{- end }}
    nginx.ingress.kubernetes.io/auth-url: "https://$host/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://$host/oauth2/start?rd=$escaped_request_uri"
    nginx.ingress.kubernetes.io/auth-response-headers: "x-auth-request-user,x-auth-request-email,x-auth-request-access-token"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-buffering: "off"
spec:
  {{- if .Values.ingress.tls.enabled }}
  tls:
  - hosts:
    - {{ .Values.user.host }}
    secretName: {{ .Values.ingress.tls.secretName }}
  {{- end }}
  rules:
  - host: {{ .Values.user.host }}
    http:
      paths:
      - path: /oauth/ide
        pathType: Prefix
        backend:
          service:
            name: ws-{{ .Values.user.name }}
            port:
              number: 8080
{{- end }}