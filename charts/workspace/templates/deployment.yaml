apiVersion: apps/v1
kind: Deployment
metadata:
  name: ws-{{ .Values.user.name }}
  namespace: {{ .Values.namespace }}
  labels: 
    app: ws-{{ .Values.user.name }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector: 
    matchLabels: 
      app: ws-{{ .Values.user.name }}
  template:
    metadata:
      labels: 
        app: ws-{{ .Values.user.name }}
    spec:
      serviceAccountName: ws-{{ .Values.user.name }}
      {{- if .Values.image.pullSecretName }}
      imagePullSecrets:
      - name: {{ .Values.image.pullSecretName }}
      {{- end }}
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: ide
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        workingDir: /home/dev
        command: ["/bin/bash","-lc"]
        args:
          - >
            cd /home/dev &&
            mkdir -p ~/.local/share/code-server &&
            mkdir -p ~/.config &&
            mkdir -p /shared-data/.ssh /shared-data/.config &&
            ln -sf /shared-data/.ssh ~/.ssh &&
            ln -sf /shared-data/.config/git ~/.config/git &&
            code-server --bind-addr 0.0.0.0:8080 --auth none /home/dev &
            ttyd --port 7681 --interface 0.0.0.0 --writable -w /home/dev bash &
            sleep infinity
        env:
        {{- if eq .Values.build.mode "buildkit" }}
        - name: DOCKER_HOST
          value: "tcp://localhost:2376"
        - name: DOCKER_CERT_PATH
          value: "/certs/client"
        - name: DOCKER_TLS_VERIFY
          value: "1"
        {{- end }}
        {{- with .Values.user.env }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        ports:
        - name: http
          containerPort: 8080
        - name: terminal
          containerPort: 7681
        volumeMounts:
        - name: home
          mountPath: /home/dev
        - name: shared-credentials
          mountPath: /shared-data
        {{- if eq .Values.build.mode "buildkit" }}
        - name: docker-certs
          mountPath: /certs/client
          readOnly: true
        {{- end }}
        - name: kaniko-wrapper
          mountPath: /usr/local/bin/docker-build
          subPath: docker-build
        {{- if eq .Values.build.mode "buildkit" }}
        - name: buildkit-wrapper
          mountPath: /usr/local/bin/docker-buildx
          subPath: docker-buildx
        {{- end }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
      {{- if eq .Values.build.mode "buildkit" }}
      - name: dind
        image: docker:27-dind
        securityContext:
          privileged: true
          runAsUser: 0
          runAsGroup: 0
        env:
        - name: DOCKER_TLS_CERTDIR
          value: "/certs"
        ports:
        - containerPort: 2376
          name: docker
        volumeMounts:
        - name: docker-certs
          mountPath: /certs/client
        - name: dind-storage
          mountPath: /var/lib/docker
        {{- end }}
      volumes:
      - name: home
        persistentVolumeClaim: 
          claimName: ws-{{ .Values.user.name }}-home
      - name: shared-credentials
        emptyDir: {}
      - name: kaniko-wrapper
        configMap:
          name: kaniko-wrapper
          defaultMode: 0555
      {{- if eq .Values.build.mode "buildkit" }}
      - name: buildkit-wrapper
        configMap:
          name: buildkit-wrapper
          defaultMode: 0555
      - name: docker-certs
        emptyDir: {}
      - name: dind-storage
        emptyDir: {}
      {{- end }}