apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ws-{{ .Values.user.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: ws-{{ .Values.user.name }}
  annotations:
    {{- if .Values.ingress.className }}
    kubernetes.io/ingress.class: {{ .Values.ingress.className }}
    {{- end }}
    {{- if and .Values.ingress.tls.enabled .Values.ingress.tls.clusterIssuer }}
    cert-manager.io/cluster-issuer: {{ .Values.ingress.tls.clusterIssuer }}
    {{- end }}
    {{- if eq .Values.ingress.auth.type "basic" }}
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: {{ .Values.ingress.auth.secretName }}
    {{- end }}
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
spec:
  {{- if .Values.ingress.tls.enabled }}
  tls:
  - hosts:
    - {{ .Values.user.host }}
    secretName: {{ .Values.ingress.tls.secretName }}
  {{- end }}
  rules:
  - host: {{ .Values.user.host }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ws-{{ .Values.user.name }}
            port:
              number: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ws-{{ .Values.user.name }}-browser
  namespace: {{ .Values.namespace }}
  labels:
    app: ws-{{ .Values.user.name }}
  annotations:
    {{- if .Values.ingress.className }}
    kubernetes.io/ingress.class: {{ .Values.ingress.className }}
    {{- end }}
    {{- if and .Values.ingress.tls.enabled .Values.ingress.tls.clusterIssuer }}
    cert-manager.io/cluster-issuer: {{ .Values.ingress.tls.clusterIssuer }}
    {{- end }}
    {{- if eq .Values.ingress.auth.type "basic" }}
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: {{ .Values.ingress.auth.secretName }}
    {{- end }}
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
spec:
  {{- if .Values.ingress.tls.enabled }}
  tls:
  - hosts:
    - {{ .Values.user.host }}
    secretName: {{ .Values.ingress.tls.secretName }}
  {{- end }}
  rules:
  - host: {{ .Values.user.host }}
    http:
      paths:
      - path: /browser
        pathType: Prefix
        backend:
          service:
            name: ws-{{ .Values.user.name }}
            port:
              number: 6080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ws-{{ .Values.user.name }}-terminal
  namespace: {{ .Values.namespace }}
  labels:
    app: ws-{{ .Values.user.name }}
  annotations:
    {{- if .Values.ingress.className }}
    kubernetes.io/ingress.class: {{ .Values.ingress.className }}
    {{- end }}
    {{- if and .Values.ingress.tls.enabled .Values.ingress.tls.clusterIssuer }}
    cert-manager.io/cluster-issuer: {{ .Values.ingress.tls.clusterIssuer }}
    {{- end }}
    {{- if eq .Values.ingress.auth.type "basic" }}
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: {{ .Values.ingress.auth.secretName }}
    {{- end }}
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
spec:
  {{- if .Values.ingress.tls.enabled }}
  tls:
  - hosts:
    - {{ .Values.user.host }}
    secretName: {{ .Values.ingress.tls.secretName }}
  {{- end }}
  rules:
  - host: {{ .Values.user.host }}
    http:
      paths:
      - path: /terminal
        pathType: Prefix
        backend:
          service:
            name: ws-{{ .Values.user.name }}
            port:
              number: 7681