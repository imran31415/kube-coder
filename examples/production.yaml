# Production Configuration Example
# Secure HTTPS setup with multiple users and resource limits

domain: dev.mycompany.com

image:
  repository: registry.mycompany.com/coder
  tag: v1.0.0
  pullSecretName: registry-credentials

ingress:
  className: nginx
  tls:
    enabled: true
    secretName: dev-mycompany-tls
    clusterIssuer: letsencrypt-production
  auth:
    type: basic
    secretName: api-basic-auth

resources:
  requests:
    cpu: "1"
    memory: "2Gi"
  limits:
    cpu: "8"
    memory: "16Gi"

build:
  pushSecretName: registry-credentials
  defaultDestinationRepo: registry.mycompany.com/builds

users:
  - name: alice
    pvcSize: 100Gi
    host: alice.dev.mycompany.com
    env:
      - name: GIT_USER_NAME
        value: "Alice Smith"
      - name: GIT_USER_EMAIL
        value: "alice@mycompany.com"
      - name: NODE_ENV
        value: "development"
      - name: TEAM
        value: "frontend"
        
  - name: bob
    pvcSize: 50Gi
    host: bob.dev.mycompany.com
    env:
      - name: GIT_USER_NAME
        value: "Bob Johnson"
      - name: GIT_USER_EMAIL
        value: "bob@mycompany.com"
      - name: TEAM
        value: "backend"
        
  - name: charlie
    pvcSize: 75Gi
    host: charlie.dev.mycompany.com
    env:
      - name: GIT_USER_NAME
        value: "Charlie Davis"
      - name: GIT_USER_EMAIL
        value: "charlie@mycompany.com"
      - name: TEAM
        value: "devops"

advanced:
  storageClass: "fast-ssd"
  nodeSelector:
    workload-type: "development"
  labels:
    department: "engineering"
    environment: "development"
  annotations:
    monitoring.io/scrape: "true"