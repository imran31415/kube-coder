{{- range .Values.users }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ws-{{ .name }}
  namespace: {{ $.Values.namespace }}
  labels: 
    app: ws-{{ .name }}
    {{- with $.Values.advanced.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with $.Values.advanced.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: 1
  selector: 
    matchLabels: 
      app: ws-{{ .name }}
  template:
    metadata:
      labels: 
        app: ws-{{ .name }}
        {{- with $.Values.advanced.labels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: ws-{{ .name }}
      {{- if $.Values.image.pullSecretName }}
      imagePullSecrets:
      - name: {{ $.Values.image.pullSecretName }}
      {{- end }}
      {{- with $.Values.advanced.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.advanced.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.advanced.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- if $.Values.advanced.securityContext }}
        {{- toYaml $.Values.advanced.securityContext | nindent 8 }}
        {{- else }}
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        {{- end }}
      containers:
      - name: ide
        image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag }}"
        imagePullPolicy: {{ $.Values.image.pullPolicy }}
        command: ["/bin/bash","-lc"]
        args:
          - >
            mkdir -p ~/.local/share/code-server &&
            code-server --bind-addr 0.0.0.0:8080 --auth none &
            ttyd --port 7681 --interface 0.0.0.0 --writable bash &
            sleep infinity
        env:
        {{- with .env }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        ports:
        - name: http
          containerPort: 8080
        - name: terminal
          containerPort: 7681
        volumeMounts:
        - name: home
          mountPath: /home/dev
        - name: kaniko-wrapper
          mountPath: /usr/local/bin/docker-build
          subPath: docker-build
        resources:
{{ toYaml $.Values.resources | indent 10 }}
      volumes:
      - name: home
        persistentVolumeClaim: 
          claimName: ws-{{ .name }}-home
      - name: kaniko-wrapper
        configMap:
          name: kaniko-wrapper
          defaultMode: 0555
---
{{- end }}