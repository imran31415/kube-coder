{{- range .Values.users }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ws-{{ .name }}
  namespace: {{ $.Values.namespace }}
  labels: { app: ws-{{ .name }} }
spec:
  replicas: 1
  selector: { matchLabels: { app: ws-{{ .name }} } }
  template:
    metadata:
      labels: { app: ws-{{ .name }} }
    spec:
      serviceAccountName: ws-{{ .name }}
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: ide
        image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag }}"
        imagePullPolicy: {{ $.Values.image.pullPolicy }}
        command: ["/bin/bash","-lc"]
        args:
          - >
            mkdir -p ~/.local/share/code-server &&
            code-server --bind-addr 0.0.0.0:8080 --auth none &
            sleep infinity
        env:
        {{- with .env }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        ports:
        - name: http
          containerPort: 8080
        volumeMounts:
        - name: home
          mountPath: /home/dev
        - name: kaniko-wrapper
          mountPath: /usr/local/bin/docker-build
          subPath: docker-build
        lifecycle:
          postStart:
            exec:
              command: ["/bin/bash","-lc","chmod +x /usr/local/bin/docker-build"]
        resources:
{{ toYaml $.Values.resources | indent 10 }}
      volumes:
      - name: home
        persistentVolumeClaim: { claimName: ws-{{ .name }}-home }
      - name: kaniko-wrapper
        configMap:
          name: kaniko-wrapper
          defaultMode: 0555
---
{{- end }}
